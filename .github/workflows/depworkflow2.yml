name: Trigger auto deployment for agent-api2

# When this action will be executed
on:
  push:
    branches: [ master, develop ]
    paths:
      - 'src/api/**'
      - 'src/web/**'
      - '.github/workflows/depworkflow2.yml'
  pull_request:
    branches: [ master ]
    paths:
      - 'src/api/**'
      - 'src/web/**'
  workflow_dispatch:
    
env:
  # Azure Container Registry details
  AZURE_CONTAINER_REGISTRY: cr3rbky3yz3zumq
  REGISTRY_URL: cr3rbky3yz3zumq.azurecr.io
  
  # Container App Environment
  CONTAINER_APPS_ENVIRONMENT: agent-ca-env
  RESOURCE_GROUP: rg-crtwriter
  
  API_IMAGE_NAME: agent-api33
  WEB_IMAGE_NAME: agent-web33

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions: 
      id-token: write #This is required for requesting the OIDC JWT Token
      contents: read #Required when GH token is used to authenticate with private repo

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AGENTAPI2_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AGENTAPI2_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AGENTAPI2_AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Azure Container Registry
        run: az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY }}

      - name: Build and push container image
        run: |
          cd ${{ github.workspace }}/src/api
          docker build -t ${{ env.REGISTRY_URL }}/${{ env.API_IMAGE_NAME }}:${{ github.sha }} .
          docker push ${{ env.REGISTRY_URL }}/${{ env.API_IMAGE_NAME }}:${{ github.sha }}

      - name: Deploy to Container Apps
        run: |
          # Get the user-assigned managed identity resource ID using the client ID from secrets
          IDENTITY_ID=$(az identity list \
            --query "[?clientId=='${{ secrets.AGENTAPI2_AZURE_CLIENT_ID }}'].id | [0]" -o tsv)
          
          if [ -z "$IDENTITY_ID" ]; then
            echo "ERROR: Could not find managed identity with client ID ${{ secrets.AGENTAPI2_AZURE_CLIENT_ID }}"
            exit 1
          fi
          
          echo "Using managed identity: $IDENTITY_ID"
          
          # Update container app with the new image
          echo "Updating container app with new image..."
          az containerapp update \
            --name ${{ env.API_IMAGE_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image ${{ env.REGISTRY_URL }}/${{ env.API_IMAGE_NAME }}:${{ github.sha }}
            
          # Configure registry authentication with managed identity
          echo "Configuring registry authentication..."
          az containerapp registry set \
            --name ${{ env.API_IMAGE_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --server ${{ env.REGISTRY_URL }} \
            --identity $IDENTITY_ID
            
          echo "Deployment completed successfully!"
